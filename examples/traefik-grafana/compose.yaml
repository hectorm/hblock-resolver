# yaml-language-server: $schema=https://raw.githubusercontent.com/compose-spec/compose-spec/master/schema/compose-spec.json
name: "hblock-resolver"

# https://hub.docker.com/_/traefik
x-traefik-image: &traefik-image "docker.io/traefik:3.4"
# https://hub.docker.com/r/hectorm/hblock-resolver
x-hblock-resolver-image: &hblock-resolver-image "docker.io/hectorm/hblock-resolver:latest"
# https://hub.docker.com/r/grafana/grafana
x-grafana-image: &grafana-image "docker.io/grafana/grafana:12.0.2"
# https://hub.docker.com/r/prom/prometheus
x-prometheus-image: &prometheus-image "docker.io/prom/prometheus:v3.4.2"

services:

  traefik:
    image: *traefik-image
    restart: "on-failure:3"
    hostname: "traefik"
    networks:
      - "hblock-resolver"
    ports:
      - "80:80/tcp" # HTTP.
      - "443:443/tcp" # HTTPS.
      - "443:443/udp" # HTTPS (QUIC).
      - "853:853/tcp" # DNS over TLS.
    volumes:
      - { type: "bind", source: "./config/traefik/traefik.yml", target: "/etc/traefik/traefik.yml", read_only: true }
      - { type: "bind", source: "./config/traefik/dynamic/", target: "/etc/traefik/dynamic/", read_only: true }
      - { type: "volume", source: "traefik-acme", target: "/etc/traefik/acme/" }
    environment:
      DOMAIN: "${DOMAIN:?}"
      TRAEFIK_BASIC_AUTH: "${TRAEFIK_BASIC_AUTH:-}"
      TRAEFIK_TLS_RESOLVER: "${TRAEFIK_TLS_RESOLVER:-}"
    healthcheck:
      test: ["CMD", "traefik", "healthcheck"]
      start_period: "120s"
      start_interval: "5s"
      interval: "30s"
      timeout: "10s"
      retries: 2

  hblock-resolver:
    image: *hblock-resolver-image
    restart: "on-failure:3"
    hostname: "hblock-resolver"
    networks:
      - "hblock-resolver"
    ports:
      - "127.0.0.153:53:53/udp" # DNS over UDP.
      - "127.0.0.153:53:53/tcp" # DNS over TCP.
    volumes:
      - { type: "volume", source: "hblock-resolver-data", target: "/var/lib/knot-resolver/" }
    environment:
      KRESD_INSTANCE_NUMBER: "${KRESD_INSTANCE_NUMBER:-4}"

  grafana:
    image: *grafana-image
    restart: "on-failure:3"
    hostname: "grafana"
    networks:
      - "hblock-resolver"
    volumes:
      - { type: "bind", source: "./config/grafana/provisioning/", target: "/etc/grafana/provisioning/", read_only: true }
      - { type: "volume", source: "grafana-data", target: "/var/lib/grafana/" }
    environment:
      GF_SERVER_ROOT_URL: "https://${DOMAIN:?}/grafana/"
      GF_SERVER_SERVE_FROM_SUB_PATH: "true"
      GF_SECURITY_ADMIN_USER: "admin"
      GF_SECURITY_ADMIN_PASSWORD: "${GRAFANA_ADMIN_PASSWORD:?}"
      GF_SECURITY_SECRET_KEY: "${GRAFANA_SECRET_KEY:?}"
      GF_SECURITY_COOKIE_SECURE: "true"
      GF_SECURITY_DISABLE_GRAVATAR: "true"
      GF_USERS_ALLOW_SIGN_UP: "false"
      GF_USERS_ALLOW_ORG_CREATE: "false"
      GF_AUTH_BASIC_ENABLED: "false"
      GF_PLUGINS_PLUGIN_ADMIN_ENABLED: "false"
      GF_PLUGINS_PREINSTALL: ""
      GF_PLUGINS_DISABLE_PLUGINS: >-
        grafana-lokiexplore-app,
        grafana-pyroscope-app,
        grafana-exploretraces-app,
        grafana-metricsdrilldown-app
      GF_ANALYTICS_ENABLED: "false"
      GF_ANALYTICS_REPORTING_ENABLED: "false"
      GF_ANALYTICS_CHECK_FOR_UPDATES: "false"
      GF_ANALYTICS_CHECK_FOR_PLUGIN_UPDATES: "false"
      GF_ANALYTICS_FEEDBACK_LINKS_ENABLED: "false"
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:3000/api/health"]
      start_period: "120s"
      start_interval: "5s"
      interval: "30s"
      timeout: "10s"
      retries: 2

  prometheus:
    image: *prometheus-image
    restart: "on-failure:3"
    hostname: "prometheus"
    networks:
      - "hblock-resolver"
    volumes:
      - { type: "bind", source: "./config/prometheus/", target: "/etc/prometheus/", read_only: true }
      - { type: "volume", source: "prometheus-data", target: "/prometheus/" }
    command:
      - "--web.external-url=https://${DOMAIN:?}/prometheus/"
      - "--web.route-prefix=/prometheus/"
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus/"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries/"
      - "--web.console.templates=/usr/share/prometheus/consoles/"
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:9090/prometheus/-/healthy"]
      start_period: "120s"
      start_interval: "5s"
      interval: "30s"
      timeout: "10s"
      retries: 2

volumes:

  traefik-acme:

  hblock-resolver-data:

  grafana-data:

  prometheus-data:

networks:

  hblock-resolver:
